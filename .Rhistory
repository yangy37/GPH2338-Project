print(df2)
dim(df2)
is_categorical <- sapply(df2, is.character)
is_categorical
df2$Type_of_Breast_Surgery = ifelse(df2$`Type of Breast Surgery` =="BREAST CONSERVING",1,0)
df2$new_Chemotherapy = ifelse(df2$Chemotherapy =="NO",0,1)
for (i in 1:nrow(df2)) {
if (df2[i,]$Cellularity == "High") {
df2$new_Cellularity[i] <- 3
}
else if (df2[i,]$Cellularity == "Moderate") {
df2$new_Cellularity[i] <- 2
}
else {
df2$new_Cellularity[i] <- 1
}
}
df2$Pam50_Claudin_low_subtype_Luma = ifelse(df2$`Pam50 + Claudin-low subtype` == "LumA",1,0)
df2$Pam50_Claudin_low_subtype_LumB = ifelse(df2$`Pam50 + Claudin-low subtype` == "LumB",1,0)
df2$Pam50_Claudin_low_subtype_Her2 = ifelse(df2$`Pam50 + Claudin-low subtype` == "Her2",1,0)
df2$Pam50_Claudin_low_subtype_Basal = ifelse(df2$`Pam50 + Claudin-low subtype` == "Basal",1,0)
df2$Pam50_Claudin_low_subtype_Normal = ifelse(df2$`Pam50 + Claudin-low subtype` == "Normal",1,0)
df2$Pam50_Claudin_low_subtype_claudin = ifelse(df2$`Pam50 + Claudin-low subtype` == "claudin-low",1,0)
df2$Pam50_Claudin_low_subtype_NC = ifelse(df2$`Pam50 + Claudin-low subtype` == "NC",1,0)
df2$ER_status_measured_by_IHC = ifelse(df2$`ER status measured by IHC` =="Positve",1,0)
df2$ER_Status_Positive = ifelse(df2$`ER Status` =="Positive",1,0)
for (i in 1:nrow(df2)) {
if (df2[i,]$`HER2 status measured by SNP6` == "NEUTRAL") {
df2$HER2_status_measured_by_SNP6[i] <- 4
}
else if (df2[i,]$`HER2 status measured by SNP6` == "GAIN") {
df2$HER2_status_measured_by_SNP6[i] <- 3
}
else if (df2[i,]$`HER2 status measured by SNP6` == "LOSS"){
df2$HER2_status_measured_by_SNP6[i] <- 2
}
else if (df2[i,]$`HER2 status measured by SNP6` == "UNDEF"){
df2$HER2_status_measured_by_SNP6[i] <- 1
}
}
df2$HER2_Status_Positive = ifelse(df2$`HER2 Status` =="Positive",1,0)
df2$Tumor_Other_Histologic_Subtype_Ductal = ifelse(df2$`Tumor Other Histologic Subtype` == "Ductal/NST",1,0)
df2$Tumor_Other_Histologic_Subtype_Tubular = ifelse(df2$`Tumor Other Histologic Subtype` == "Tubular/ cribriform",1,0)
df2$Tumor_Other_Histologic_Subtype_Medullary = ifelse(df2$`Tumor Other Histologic Subtype` == "Medullary",1,0)
df2$Hormone_Therapy = ifelse(df2$`Hormone Therapy` =="NO",0,1)
df2$Inferred_Menopausal_State = ifelse(df2$`Inferred Menopausal State` =="Pre",0,1)
df2$Primary_Tumor_Laterality = ifelse(df2$`Primary Tumor Laterality` =="Right",0,1)
df2$PR_Status = ifelse(df2$`PR Status` =="Positive",1,0)
df2$Radio_Therapy = ifelse(df2$`Radio Therapy` =="NO",0,1)
df2$Relapse_Free_Status = ifelse(df2$`Relapse Free Status` =="0:Not Recurred",0,1)
df2$Gene_classifier_subtype_ERH = ifelse(df2$`3-Gene classifier subtype` == "ER+/HER2- High Prolif",1,0)
df2$Gene_classifier_subtype_ERL = ifelse(df2$`3-Gene classifier subtype` == "ER+/HER2- Low Prolif",1,0)
df2$Gene_classifier_subtype_ERM = ifelse(df2$`3-Gene classifier subtype` == "ER-/HER2-",1,0)
df2$Gene_classifier_subtype_ERP = ifelse(df2$`3-Gene classifier subtype` == "HER2+",1,0)
df2$Overall_Survival_Status = ifelse(df2$`Patient's Vital Status` == "Living",1,0)
names(df2)[names(df2) == "Cancer Type Detailed"] <- "Cancer_Type_Detailed"
df2<- df2[df2$Cancer_Type_Detailed == "Breast Invasive Ductal Carcinoma",]
#df2
names(df2)[names(df2) == "Age at Diagnosis"] <- "Age"
names(df2)[names(df2) == "Neoplasm Histologic Grade"] <- "Neo_Grade"
names(df2)[names(df2) == "Lymph nodes examined positive"] <- "Lymph"
names(df2)[names(df2) == "Mutation Count"] <- "Mutation"
names(df2)[names(df2) == "Nottingham prognostic index"] <- "Nottingham"
names(df2)[names(df2) == "Overall Survival (Months)"] <- "Overall_Month"
names(df2)[names(df2) == "Relapse Free Status (Months)"] <- "Relapse_Month"
names(df2)[names(df2) == "TMB (nonsynonymous)"] <- "TMB"
names(df2)[names(df2) == "Tumor Size"] <- "Tumor_Size"
names(df2)[names(df2) == "Tumor Stage"] <- "Tumor_Stage"
df2
df3 <- df2[,-c(2,3,4:6,8,9,11:17,21,23, 24, 26,27:30, 34)]
df3
pander(summary(df3),caption='Descriptive Statistics of The Data')
pander(head(df3),caption='Head of data selection')
df3 %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
tr_ind <- 1:(nrow(df3) * 0.8)
df3_tall <- df3[tr_ind, ]
nrow(df3_tall)
df3_te <- df3[-tr_ind, ]
nrow(df3_te)
tr_ind2 <- 1:(nrow(df3_tall) * 0.8)
df3_tr <- df3_tall[tr_ind2, ]
nrow(df3_tr)
df3_va <- df3_tall[-tr_ind2, ]
nrow(df3_va)
set.seed(0)
fit_BIC <- regsubsets(Overall_Survival_Status ~ ., data = df3_tr)
summary_BIC <- summary(fit_BIC)
min_BIC <- which.min(summary_BIC$bic)
min_BIC
coef_BIC = coef(fit_BIC,min_BIC)
coef_BIC
formula1 <- Overall_Survival_Status ~ Age + Cohort + Overall_Month + Relapse_Month + Type_of_Breast_Surgery  + Gene_classifier_subtype_ERL
fit_BACKWARD <- regsubsets(Overall_Survival_Status ~ ., data = df3_tr, method = "backward", nvmax = ncol(df3_tr)-1)
summary_BACKWARD <- summary(fit_BACKWARD)
mix_BACKWARD <- which.min(summary_BACKWARD$cp)
mix_BACKWARD
coef_BACKWARD = coef(fit_BACKWARD, mix_BACKWARD)
coef_BACKWARD
formula2 <- Overall_Survival_Status ~ Age + Cohort + Lymph + Overall_Month + Relapse_Month + Tumor_Stage + Type_of_Breast_Surgery +  new_Chemotherapy+  Pam50_Claudin_low_subtype_Luma + Pam50_Claudin_low_subtype_Basal + Pam50_Claudin_low_subtype_claudin  +  HER2_Status_Positive + Gene_classifier_subtype_ERH+  Gene_classifier_subtype_ERL
x_tr<-as.matrix(df3_tr[,c(1:ncol(df3_tr) - 1)])
y_tr<-as.matrix(df3_tr[,ncol(df3_tr)])
x_te<-as.matrix(df3_te[,c(1:ncol(df3_tr) - 1)])
y_te<-as.matrix(df3_te[,ncol(df3_tr)])
library(glmnet)
set.seed(0)
error_lasso_array <- c()
lasso_cv_array <- c()
for (i in 3:10) {
for (j in seq(0, 1, 0.05)){
lasso_cv<-cv.glmnet(x=x_tr,y=y_tr,type.measure='mse',nfold=i,alpha=j,keep=T)
result_la<-predict(lasso_cv,newx=x_te,interval='prediction')
error_lasso <- (err_la<-mean((y_te-result_la)^2))
lasso_cv_array[ (i-3)*20 + j * 20] <- lasso_cv
error_lasso_array[ (i-3)*20 + j * 20] <- error_lasso
}
}
minlasso <- which.min(error_lasso_array)
minlasso
lasso_cv <- cv.glmnet(x=x_tr,y=y_tr,type.measure='mse',nfold=3,alpha=0.7,keep=T)
lasso_cv$lambda.min
coef_lasso = coef(lasso_cv, s=lasso_cv$lambda.min)
coef_lasso
formula3 <- Overall_Survival_Status ~ Age + Cohort + Lymph + Overall_Month + Relapse_Month + Tumor_Stage + Type_of_Breast_Surgery + new_Chemotherapy + Pam50_Claudin_low_subtype_Luma + Pam50_Claudin_low_subtype_LumB + Pam50_Claudin_low_subtype_Her2 + Pam50_Claudin_low_subtype_Normal + Pam50_Claudin_low_subtype_claudin + Pam50_Claudin_low_subtype_NC + HER2_status_measured_by_SNP6 + Tumor_Other_Histologic_Subtype_Medullary + Hormone_Therapy + Inferred_Menopausal_State + Primary_Tumor_Laterality + PR_Status + Radio_Therapy + Relapse_Free_Status + Gene_classifier_subtype_ERH
library(pROC)
set.seed(0)
predict_BIC = glm(formula1,df3_tr,family = "binomial")
pred_BIC = round(predict(predict_BIC,df3_te,type = "response"))
roc_bic <- roc(df3_te$Overall_Survival_Status,pred_BIC,smooth=F)
auc(roc_bic)
predict_BACKWARD  = glm(formula2,df3_tr,family = "binomial")
pred_BACKWARD = round(predict(predict_BACKWARD,df3_te,type = "response"))
roc_back <- roc(df3_te$Overall_Survival_Status,pred_BACKWARD,smooth=F)
auc(roc_back)
predict_net = glm(formula3,df3_tr,family = "binomial")
pred_net = round(predict(predict_net,df3_te,type = "response"))
roc_net <- roc(df3_te$Overall_Survival_Status,pred_net,smooth=F)
auc(roc_net)
which.max(data.frame(auc(roc_bic),  auc(roc_back), auc(roc_net))) # All the errors listed
library(randomForest)
set.seed(0)
K <- 10
n_all <- nrow(df3_tr)
n_all2 <- nrow(df3_va)
fold_auc_rf<-as.numeric()
auc_all <- c()
fold_ind <- sample(1:K, n_all, replace = TRUE)
fold_ind2 <- sample(1:K, n_all2, replace = TRUE)
for (i in c(10,100,10)) {
for (j in 1:K) {
rf_model <- randomForest(formula3, data = df3_tr[fold_ind != j, ], ntree = i, importance = T)
pred_prob <- predict(rf_model, newdata = df3_va[fold_ind2 == j, ], type = "response")
pred_label <- ifelse(pred_prob > 0.5, 1, 0)
roc_rf <- roc(df3_va[fold_ind2 == j, ]$Overall_Survival_Status,pred_label,smooth=F)
auc_all[((i/10 -1)*10) + j] <- auc(roc_rf)
}
}
which.max(auc_all)
rf_model <- randomForest(formula3, data = df3_tr, ntree = 30, importance = T)
pred_prob <- predict(rf_model, newdata = df3_te, type = "response")
rf_pred<-as.character(pred_prob)
rf_pred<-as.numeric(pred_prob)
rf_roc<-roc(df3_te$Overall_Survival_Status,rf_pred,smooth=F)
plot(rf_roc, auc.polygon=T, auc.polygon.col='pink', smooth=F,print.auc=T, max.auc.polygon=T,print.thres.cex=0.8, lty=1,main='ROC',print.thres=T)
rf_auc <- auc(rf_roc)
rf_auc
plot(rf_model)
set.seed(0)
K <- 10
n_all <- nrow(df3_tr)
n_all2 <- nrow(df3_va)
fold_auc_rf<-as.numeric()
auc_all3 <- c()
fold_ind <- sample(1:K, n_all, replace = TRUE)
fold_ind2 <- sample(1:K, n_all2, replace = TRUE)
table(df3$Overall_Survival_Status)
for (j in 2:K) {
for (i in 5:20) {
knn_model <- knn3(formula3 <- Overall_Survival_Status ~ Age + Cohort + Lymph + Overall_Month + Relapse_Month + Tumor_Stage + Type_of_Breast_Surgery + new_Chemotherapy + Pam50_Claudin_low_subtype_Luma + Pam50_Claudin_low_subtype_LumB + Pam50_Claudin_low_subtype_Her2 + Pam50_Claudin_low_subtype_Normal + Pam50_Claudin_low_subtype_claudin + Pam50_Claudin_low_subtype_NC + HER2_status_measured_by_SNP6 + Tumor_Other_Histologic_Subtype_Medullary + Hormone_Therapy + Inferred_Menopausal_State + Primary_Tumor_Laterality + PR_Status + Radio_Therapy + Relapse_Free_Status + Gene_classifier_subtype_ERH, df3_tr[fold_ind != j, ], k = i)
knn_prob <- predict(knn_model, newdata = df3_va[fold_ind2 == j, ])
pred_label <- ifelse(knn_prob > 0.5, 1, 0)
roc_rf <- roc(df3_va[fold_ind2 == j, ]$Overall_Survival_Status,pred_label[,2],smooth=F)
auc_all3[((j-2)*15) + i - 4] <- auc(roc_rf)
}
}
which.max(auc_all3)
knn_model <- knn3(formula3 <- Overall_Survival_Status ~ Age + Cohort + Lymph + Overall_Month + Relapse_Month + Tumor_Stage + Type_of_Breast_Surgery + new_Chemotherapy + Pam50_Claudin_low_subtype_Luma + Pam50_Claudin_low_subtype_LumB + Pam50_Claudin_low_subtype_Her2 + Pam50_Claudin_low_subtype_Normal + Pam50_Claudin_low_subtype_claudin + Pam50_Claudin_low_subtype_NC + HER2_status_measured_by_SNP6 + Tumor_Other_Histologic_Subtype_Medullary + Hormone_Therapy + Inferred_Menopausal_State + Primary_Tumor_Laterality + PR_Status + Radio_Therapy + Relapse_Free_Status + Gene_classifier_subtype_ERH, df3_tr, k = 10)
knn_prob <- predict(knn_model, newdata = df3_te)
pred_label <- ifelse(knn_prob > 0.5, 1, 0)
knn_roc <- roc(df3_te$Overall_Survival_Status,pred_label[,2],smooth=F)
plot(knn_roc, auc.polygon=T, auc.polygon.col='pink', smooth=F,print.auc=T, max.auc.polygon=T,print.thres.cex=0.8, lty=1,main='ROC',print.thres=T)
knn_auc <- auc(knn_roc)
knn_auc
set.seed(0)
K <- 10
n_all <- nrow(df3_tr)
n_all2 <- nrow(df3_va)
fold_auc_rf<-as.numeric()
auc_all2 <- c()
fold_ind <- sample(1:K, n_all, replace = TRUE)
fold_ind2 <- sample(1:K, n_all2, replace = TRUE)
for (i in 3:10) {
for (j in seq(0.01, 0.1, 0.005)) {
gbm_cv<-gbm(formula3,data = df3_tr[fold_ind != i, ], distribution = "multinomial", shrinkage = j )
result_gbm<-predict(gbm_cv,df3_va[fold_ind2 == i, ],type="response")
pred_label <- ifelse(result_gbm > 0.5, 1, 0)
lengthforpredict <- nrow(as.matrix(pred_label))
lengthforpredict2 <- lengthforpredict / 2 + 1
vector <- as.vector(pred_label)
vector <- vector[lengthforpredict2 : lengthforpredict]
roc_rf <- roc(df3_va[fold_ind2 == i, ]$Overall_Survival_Status, vector,smooth=F)
auc_all2[((i - 3)*18) + j * 200] <- auc(roc_rf)
}
}
which.max(auc_all2)
gbm_cv<-gbm(formula3,data = df3_tr, distribution = "multinomial", shrinkage =  0.04)
result_gbm<-predict(gbm_cv,df3_te,type="response")
pred_label <- ifelse(result_gbm > 0.5, 1, 0)
lengthforpredict <- nrow(as.matrix(pred_label))
lengthforpredict2 <- lengthforpredict / 2 + 1
vector <- as.vector(pred_label)
vector <- vector[lengthforpredict2 : lengthforpredict]
roc_gbt <- roc(df3_te$Overall_Survival_Status, vector,smooth=F)
plot(roc_gbt, auc.polygon=T, auc.polygon.col='pink', smooth=F,print.auc=T, max.auc.polygon=T,print.thres.cex=0.8, lty=1,main='ROC',print.thres=T)
gbt_auc <- auc(roc_gbt)
gbt_auc
library(haven)
library(psych)
library(caret)
library(tidyverse)
library(ggplot2)
library(psych)
library(pander)
library(corrplot)
library(pander)
library(readr)
library(r02pro)
library(plyr)
library(tree)
library(gbm)
library(caret)
library(leaps)
library(readr)
df<-readr::read_tsv("brca_metabric_clinical_data.tsv")
colnames(df)
colSums(is.na(df))
print(df)
df1 <- df %>% na.omit()
colSums(is.na(df1))
df2<-df1[,-c(1, 2, 3, 6, 27)] # remove StudyID, Patient ID, Sample ID, Cancer Type
print(df2)
dim(df2)
is_categorical <- sapply(df2, is.character)
is_categorical
df2$Type_of_Breast_Surgery = ifelse(df2$`Type of Breast Surgery` =="BREAST CONSERVING",1,0)
df2$new_Chemotherapy = ifelse(df2$Chemotherapy =="NO",0,1)
for (i in 1:nrow(df2)) {
if (df2[i,]$Cellularity == "High") {
df2$new_Cellularity[i] <- 3
}
else if (df2[i,]$Cellularity == "Moderate") {
df2$new_Cellularity[i] <- 2
}
else {
df2$new_Cellularity[i] <- 1
}
}
df2$Pam50_Claudin_low_subtype_Luma = ifelse(df2$`Pam50 + Claudin-low subtype` == "LumA",1,0)
df2$Pam50_Claudin_low_subtype_LumB = ifelse(df2$`Pam50 + Claudin-low subtype` == "LumB",1,0)
df2$Pam50_Claudin_low_subtype_Her2 = ifelse(df2$`Pam50 + Claudin-low subtype` == "Her2",1,0)
df2$Pam50_Claudin_low_subtype_Basal = ifelse(df2$`Pam50 + Claudin-low subtype` == "Basal",1,0)
df2$Pam50_Claudin_low_subtype_Normal = ifelse(df2$`Pam50 + Claudin-low subtype` == "Normal",1,0)
df2$Pam50_Claudin_low_subtype_claudin = ifelse(df2$`Pam50 + Claudin-low subtype` == "claudin-low",1,0)
df2$Pam50_Claudin_low_subtype_NC = ifelse(df2$`Pam50 + Claudin-low subtype` == "NC",1,0)
df2$ER_status_measured_by_IHC = ifelse(df2$`ER status measured by IHC` =="Positve",1,0)
df2$ER_Status_Positive = ifelse(df2$`ER Status` =="Positive",1,0)
for (i in 1:nrow(df2)) {
if (df2[i,]$`HER2 status measured by SNP6` == "NEUTRAL") {
df2$HER2_status_measured_by_SNP6[i] <- 4
}
else if (df2[i,]$`HER2 status measured by SNP6` == "GAIN") {
df2$HER2_status_measured_by_SNP6[i] <- 3
}
else if (df2[i,]$`HER2 status measured by SNP6` == "LOSS"){
df2$HER2_status_measured_by_SNP6[i] <- 2
}
else if (df2[i,]$`HER2 status measured by SNP6` == "UNDEF"){
df2$HER2_status_measured_by_SNP6[i] <- 1
}
}
df2$HER2_Status_Positive = ifelse(df2$`HER2 Status` =="Positive",1,0)
df2$Tumor_Other_Histologic_Subtype_Ductal = ifelse(df2$`Tumor Other Histologic Subtype` == "Ductal/NST",1,0)
df2$Tumor_Other_Histologic_Subtype_Tubular = ifelse(df2$`Tumor Other Histologic Subtype` == "Tubular/ cribriform",1,0)
df2$Tumor_Other_Histologic_Subtype_Medullary = ifelse(df2$`Tumor Other Histologic Subtype` == "Medullary",1,0)
df2$Hormone_Therapy = ifelse(df2$`Hormone Therapy` =="NO",0,1)
df2$Inferred_Menopausal_State = ifelse(df2$`Inferred Menopausal State` =="Pre",0,1)
df2$Primary_Tumor_Laterality = ifelse(df2$`Primary Tumor Laterality` =="Right",0,1)
df2$PR_Status = ifelse(df2$`PR Status` =="Positive",1,0)
df2$Radio_Therapy = ifelse(df2$`Radio Therapy` =="NO",0,1)
df2$Relapse_Free_Status = ifelse(df2$`Relapse Free Status` =="0:Not Recurred",0,1)
df2$Gene_classifier_subtype_ERH = ifelse(df2$`3-Gene classifier subtype` == "ER+/HER2- High Prolif",1,0)
df2$Gene_classifier_subtype_ERL = ifelse(df2$`3-Gene classifier subtype` == "ER+/HER2- Low Prolif",1,0)
df2$Gene_classifier_subtype_ERM = ifelse(df2$`3-Gene classifier subtype` == "ER-/HER2-",1,0)
df2$Gene_classifier_subtype_ERP = ifelse(df2$`3-Gene classifier subtype` == "HER2+",1,0)
df2$Overall_Survival_Status = ifelse(df2$`Patient's Vital Status` == "Living",1,0)
names(df2)[names(df2) == "Cancer Type Detailed"] <- "Cancer_Type_Detailed"
df2<- df2[df2$Cancer_Type_Detailed == "Breast Invasive Ductal Carcinoma",]
#df2
names(df2)[names(df2) == "Age at Diagnosis"] <- "Age"
names(df2)[names(df2) == "Neoplasm Histologic Grade"] <- "Neo_Grade"
names(df2)[names(df2) == "Lymph nodes examined positive"] <- "Lymph"
names(df2)[names(df2) == "Mutation Count"] <- "Mutation"
names(df2)[names(df2) == "Nottingham prognostic index"] <- "Nottingham"
names(df2)[names(df2) == "Overall Survival (Months)"] <- "Overall_Month"
names(df2)[names(df2) == "Relapse Free Status (Months)"] <- "Relapse_Month"
names(df2)[names(df2) == "TMB (nonsynonymous)"] <- "TMB"
names(df2)[names(df2) == "Tumor Size"] <- "Tumor_Size"
names(df2)[names(df2) == "Tumor Stage"] <- "Tumor_Stage"
df2
df3 <- df2[,-c(2,3,4:6,8,9,11:17,21,23, 24, 26,27:30, 34)]
df3
pander(summary(df3),caption='Descriptive Statistics of The Data')
pander(head(df3),caption='Head of data selection')
df3 %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
tr_ind <- 1:(nrow(df3) * 0.8)
df3_tall <- df3[tr_ind, ]
nrow(df3_tall)
df3_te <- df3[-tr_ind, ]
nrow(df3_te)
tr_ind2 <- 1:(nrow(df3_tall) * 0.8)
df3_tr <- df3_tall[tr_ind2, ]
nrow(df3_tr)
df3_va <- df3_tall[-tr_ind2, ]
nrow(df3_va)
set.seed(0)
fit_BIC <- regsubsets(Overall_Survival_Status ~ ., data = df3_tr)
summary_BIC <- summary(fit_BIC)
min_BIC <- which.min(summary_BIC$bic)
min_BIC
coef_BIC = coef(fit_BIC,min_BIC)
coef_BIC
formula1 <- Overall_Survival_Status ~ Age + Cohort + Overall_Month + Relapse_Month + Type_of_Breast_Surgery  + Gene_classifier_subtype_ERL
fit_BACKWARD <- regsubsets(Overall_Survival_Status ~ ., data = df3_tr, method = "backward", nvmax = ncol(df3_tr)-1)
summary_BACKWARD <- summary(fit_BACKWARD)
mix_BACKWARD <- which.min(summary_BACKWARD$cp)
mix_BACKWARD
coef_BACKWARD = coef(fit_BACKWARD, mix_BACKWARD)
coef_BACKWARD
formula2 <- Overall_Survival_Status ~ Age + Cohort + Lymph + Overall_Month + Relapse_Month + Tumor_Stage + Type_of_Breast_Surgery +  new_Chemotherapy+  Pam50_Claudin_low_subtype_Luma + Pam50_Claudin_low_subtype_Basal + Pam50_Claudin_low_subtype_claudin  +  HER2_Status_Positive + Gene_classifier_subtype_ERH+  Gene_classifier_subtype_ERL
x_tr<-as.matrix(df3_tr[,c(1:ncol(df3_tr) - 1)])
y_tr<-as.matrix(df3_tr[,ncol(df3_tr)])
x_te<-as.matrix(df3_te[,c(1:ncol(df3_tr) - 1)])
y_te<-as.matrix(df3_te[,ncol(df3_tr)])
library(glmnet)
set.seed(0)
error_lasso_array <- c()
lasso_cv_array <- c()
for (i in 3:10) {
for (j in seq(0, 1, 0.05)){
lasso_cv<-cv.glmnet(x=x_tr,y=y_tr,type.measure='mse',nfold=i,alpha=j,keep=T)
result_la<-predict(lasso_cv,newx=x_te,interval='prediction')
error_lasso <- (err_la<-mean((y_te-result_la)^2))
lasso_cv_array[ (i-3)*20 + j * 20] <- lasso_cv
error_lasso_array[ (i-3)*20 + j * 20] <- error_lasso
}
}
minlasso <- which.min(error_lasso_array)
minlasso
lasso_cv <- cv.glmnet(x=x_tr,y=y_tr,type.measure='mse',nfold=3,alpha=0.7,keep=T)
lasso_cv$lambda.min
coef_lasso = coef(lasso_cv, s=lasso_cv$lambda.min)
coef_lasso
formula3 <- Overall_Survival_Status ~ Age + Cohort + Lymph + Overall_Month + Relapse_Month + Tumor_Stage + Type_of_Breast_Surgery + new_Chemotherapy + Pam50_Claudin_low_subtype_Luma + Pam50_Claudin_low_subtype_LumB + Pam50_Claudin_low_subtype_Her2 + Pam50_Claudin_low_subtype_Normal + Pam50_Claudin_low_subtype_claudin + Pam50_Claudin_low_subtype_NC + HER2_status_measured_by_SNP6 + Tumor_Other_Histologic_Subtype_Medullary + Hormone_Therapy + Inferred_Menopausal_State + Primary_Tumor_Laterality + PR_Status + Radio_Therapy + Relapse_Free_Status + Gene_classifier_subtype_ERH
library(pROC)
set.seed(0)
predict_BIC = glm(formula1,df3_tr,family = "binomial")
pred_BIC = round(predict(predict_BIC,df3_te,type = "response"))
roc_bic <- roc(df3_te$Overall_Survival_Status,pred_BIC,smooth=F)
auc(roc_bic)
predict_BACKWARD  = glm(formula2,df3_tr,family = "binomial")
pred_BACKWARD = round(predict(predict_BACKWARD,df3_te,type = "response"))
roc_back <- roc(df3_te$Overall_Survival_Status,pred_BACKWARD,smooth=F)
auc(roc_back)
predict_net = glm(formula3,df3_tr,family = "binomial")
pred_net = round(predict(predict_net,df3_te,type = "response"))
roc_net <- roc(df3_te$Overall_Survival_Status,pred_net,smooth=F)
auc(roc_net)
which.max(data.frame(auc(roc_bic),  auc(roc_back), auc(roc_net))) # All the errors listed
library(randomForest)
set.seed(0)
K <- 10
n_all <- nrow(df3_tr)
n_all2 <- nrow(df3_va)
fold_auc_rf<-as.numeric()
auc_all <- c()
fold_ind <- sample(1:K, n_all, replace = TRUE)
fold_ind2 <- sample(1:K, n_all2, replace = TRUE)
for (i in c(10,100,10)) {
for (j in 1:K) {
rf_model <- randomForest(formula3, data = df3_tr[fold_ind != j, ], ntree = i, importance = T)
pred_prob <- predict(rf_model, newdata = df3_va[fold_ind2 == j, ], type = "response")
pred_label <- ifelse(pred_prob > 0.5, 1, 0)
roc_rf <- roc(df3_va[fold_ind2 == j, ]$Overall_Survival_Status,pred_label,smooth=F)
auc_all[((i/10 -1)*10) + j] <- auc(roc_rf)
}
}
which.max(auc_all)
rf_model <- randomForest(formula3, data = df3_tr, ntree = 30, importance = T)
pred_prob <- predict(rf_model, newdata = df3_te, type = "response")
rf_pred<-as.character(pred_prob)
rf_pred<-as.numeric(pred_prob)
rf_roc<-roc(df3_te$Overall_Survival_Status,rf_pred,smooth=F)
plot(rf_roc, auc.polygon=T, auc.polygon.col='pink', smooth=F,print.auc=T, max.auc.polygon=T,print.thres.cex=0.8, lty=1,main='ROC',print.thres=T)
rf_auc <- auc(rf_roc)
rf_auc
plot(rf_model)
set.seed(0)
K <- 10
n_all <- nrow(df3_tr)
n_all2 <- nrow(df3_va)
fold_auc_rf<-as.numeric()
auc_all3 <- c()
fold_ind <- sample(1:K, n_all, replace = TRUE)
fold_ind2 <- sample(1:K, n_all2, replace = TRUE)
table(df3$Overall_Survival_Status)
for (j in 2:K) {
for (i in 5:20) {
knn_model <- knn3(formula3 <- Overall_Survival_Status ~ Age + Cohort + Lymph + Overall_Month + Relapse_Month + Tumor_Stage + Type_of_Breast_Surgery + new_Chemotherapy + Pam50_Claudin_low_subtype_Luma + Pam50_Claudin_low_subtype_LumB + Pam50_Claudin_low_subtype_Her2 + Pam50_Claudin_low_subtype_Normal + Pam50_Claudin_low_subtype_claudin + Pam50_Claudin_low_subtype_NC + HER2_status_measured_by_SNP6 + Tumor_Other_Histologic_Subtype_Medullary + Hormone_Therapy + Inferred_Menopausal_State + Primary_Tumor_Laterality + PR_Status + Radio_Therapy + Relapse_Free_Status + Gene_classifier_subtype_ERH, df3_tr[fold_ind != j, ], k = i)
knn_prob <- predict(knn_model, newdata = df3_va[fold_ind2 == j, ])
pred_label <- ifelse(knn_prob > 0.5, 1, 0)
roc_rf <- roc(df3_va[fold_ind2 == j, ]$Overall_Survival_Status,pred_label[,2],smooth=F)
auc_all3[((j-2)*15) + i - 4] <- auc(roc_rf)
}
}
which.max(auc_all3)
knn_model <- knn3(formula3 <- Overall_Survival_Status ~ Age + Cohort + Lymph + Overall_Month + Relapse_Month + Tumor_Stage + Type_of_Breast_Surgery + new_Chemotherapy + Pam50_Claudin_low_subtype_Luma + Pam50_Claudin_low_subtype_LumB + Pam50_Claudin_low_subtype_Her2 + Pam50_Claudin_low_subtype_Normal + Pam50_Claudin_low_subtype_claudin + Pam50_Claudin_low_subtype_NC + HER2_status_measured_by_SNP6 + Tumor_Other_Histologic_Subtype_Medullary + Hormone_Therapy + Inferred_Menopausal_State + Primary_Tumor_Laterality + PR_Status + Radio_Therapy + Relapse_Free_Status + Gene_classifier_subtype_ERH, df3_tr, k = 10)
knn_prob <- predict(knn_model, newdata = df3_te)
pred_label <- ifelse(knn_prob > 0.5, 1, 0)
knn_roc <- roc(df3_te$Overall_Survival_Status,pred_label[,2],smooth=F)
plot(knn_roc, auc.polygon=T, auc.polygon.col='pink', smooth=F,print.auc=T, max.auc.polygon=T,print.thres.cex=0.8, lty=1,main='ROC',print.thres=T)
knn_auc <- auc(knn_roc)
knn_auc
set.seed(0)
K <- 10
n_all <- nrow(df3_tr)
n_all2 <- nrow(df3_va)
fold_auc_rf<-as.numeric()
auc_all2 <- c()
fold_ind <- sample(1:K, n_all, replace = TRUE)
fold_ind2 <- sample(1:K, n_all2, replace = TRUE)
for (i in 3:10) {
for (j in seq(0.01, 0.1, 0.005)) {
gbm_cv<-gbm(formula3,data = df3_tr[fold_ind != i, ], distribution = "multinomial", shrinkage = j )
result_gbm<-predict(gbm_cv,df3_va[fold_ind2 == i, ],type="response")
pred_label <- ifelse(result_gbm > 0.5, 1, 0)
lengthforpredict <- nrow(as.matrix(pred_label))
lengthforpredict2 <- lengthforpredict / 2 + 1
vector <- as.vector(pred_label)
vector <- vector[lengthforpredict2 : lengthforpredict]
roc_rf <- roc(df3_va[fold_ind2 == i, ]$Overall_Survival_Status, vector,smooth=F)
auc_all2[((i - 3)*18) + j * 200] <- auc(roc_rf)
}
}
which.max(auc_all2)
gbm_cv<-gbm(formula3,data = df3_tr, distribution = "multinomial", shrinkage =  0.04)
result_gbm<-predict(gbm_cv,df3_te,type="response")
pred_label <- ifelse(result_gbm > 0.5, 1, 0)
lengthforpredict <- nrow(as.matrix(pred_label))
lengthforpredict2 <- lengthforpredict / 2 + 1
vector <- as.vector(pred_label)
vector <- vector[lengthforpredict2 : lengthforpredict]
roc_gbt <- roc(df3_te$Overall_Survival_Status, vector,smooth=F)
plot(roc_gbt, auc.polygon=T, auc.polygon.col='pink', smooth=F,print.auc=T, max.auc.polygon=T,print.thres.cex=0.8, lty=1,main='ROC',print.thres=T)
gbt_auc <- auc(roc_gbt)
gbt_auc
which.max(data.frame(rf_auc, knn_auc, gbt_auc))
rf_model <- randomForest(formula3, data = df3_tr, ntree = 30, importance = T)
pred_prob <- predict(rf_model, newdata = df3_te, type = "response")
pred_label <- ifelse(pred_prob > 0.5, 1, 0)
plot(rf_model)
install.packages("cforest")
cforest(formula3, data=df3_tr, controls=cforest_control(mtry=30, mincriterion=0))
library(reprtree)
install.packages("reprtree")
library(reprtree)
options(repos='http://cran.rstudio.org')
have.packages <- installed.packages()
cran.packages <- c('devtools','plotrix','randomForest','tree')
to.install <- setdiff(cran.packages, have.packages[,1])
if(length(to.install)>0) install.packages(to.install)
library(devtools)
if(!('reprtree' %in% installed.packages())){
install_github('munoztd0/reprtree')
}
for(p in c(cran.packages, 'reprtree')) eval(substitute(library(pkg), list(pkg=p)))
library(reprtree)
reprtree:::plot.getTree(model)
reprtree:::plot.getTree(rf_model)
which.max(data.frame(rf_auc, knn_auc, gbt_auc))
rf_model <- randomForest(formula3, data = df3_tr, ntree = 30, importance = T)
pred_prob <- predict(rf_model, newdata = df3_te, type = "response")
pred_label <- ifelse(pred_prob > 0.5, 1, 0)
plot(rf_model)
